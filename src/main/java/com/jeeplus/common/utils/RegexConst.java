package com.jeeplus.common.utils;
/**
 * 
 * @ClassName: RegexConst
 * @Description:
 * 		枚举系统服务端中用到的正则表达式
 * @Date:     2015-3-25 上午10:24:44
 * @author    lining
 * @version   mis_alpha
 * @since     JDK 1.6
 */
public class RegexConst {

	
	/**
	 * 18位身份证格式正则表达式
	 */
	public static final String IDNO_REGEX = "^(\\d{6})(\\d{4})(\\d{2})(\\d{2})(\\d{3})([0-9]|X)$";
	/**
	 * 12位工号的正则匹配模式 例如201303180005
	 */
	public static final String EMPNO_REGEX = "^20\\d{10}$";
	/**
	 * 期间的正则匹配模式 例如201503
	 */
	public static final String PERIOD_REGEX = "^2\\d{3}(0[1-9]|1[0-2])$";
	/**
	 * 年份的正则匹配模式 例如2015
	 */
	public static final String YEAR_REGEX = "^2\\d{3}$";
	/**
	 * 日期时间的匹配模式(可以识别闰年) 例如2015-03-23 13:30:49 或 2015-3-23 13:30:49
	 */
	public static final String DATETIME_REGEX = "^(([0-9]{3}[1-9]|[0-9]{2}[1-9][0-9]{1}|[0-9]{1}[1-9][0-9]{2}|[1-9][0-9]{3})-((([0]?[13578]|1[02])-([0]?[1-9]|[12][0-9]|3[01])) ((20|21|22|23|[0-1]?\\d):[0-5]?\\d:[0-5]?\\d)|(([0]?[469]|11)-(0[1-9]|[12][0-9]|30)) ((20|21|22|23|[0-1]?\\d):[0-5]?\\d:[0-5]?\\d)|([0]?2-(0[1-9]|[1][0-9]|2[0-8])) ((20|21|22|23|[0-1]?\\d):[0-5]?\\d:[0-5]?\\d)))|((([0-9]{2})(0[48]|[2468][048]|[13579][26])|((0[48]|[2468][048]|[3579][26])00))-[0]?2-29 ((20|21|22|23|[0-1]?\\d):[0-5]?\\d:[0-5]?\\d))$";
	/**
	 * 考试成绩的正则匹配模式 例如：99.0 
	 */
	public static final String SCORE_REGEX = "^(\\d{3}|\\d{1,2}(\\.\\d{1,2})?)$";
	/**
	 * 匹配正整数
	 */
	public static final String POSITIVE_INTEGER_REGEX = "^[1-9]\\d*$";
	/*
^[1-9]\d*$　 　 //匹配正整数
^-[1-9]\d*$ 　 //匹配负整数
^-?[1-9]\d*$　　 //匹配整数
^[1-9]\d*|0$　 //匹配非负整数（正整数 + 0）
^-[1-9]\d*|0$　　 //匹配非正整数（负整数 + 0）
^[1-9]\d*\.\d*|0\.\d*[1-9]\d*$　　 //匹配正浮点数
^-([1-9]\d*\.\d*|0\.\d*[1-9]\d*)$　 //匹配负浮点数
^-?([1-9]\d*\.\d*|0\.\d*[1-9]\d*|0?\.0+|0)$　 //匹配浮点数
^[1-9]\d*\.\d*|0\.\d*[1-9]\d*|0?\.0+|0$　　 //匹配非负浮点数（正浮点数 + 0）
^(-([1-9]\d*\.\d*|0\.\d*[1-9]\d*))|0?\.0+|0$　　//匹配非正浮点数（负浮点数 + 0）
	 */
	
}
