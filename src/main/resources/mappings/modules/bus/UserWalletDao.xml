<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jeeplus.modules.bus.dao.UserWalletDao">
    
	<sql id="userWalletColumns">
		a.id AS "id",
		a.office_id AS "office.id",
		a.coin AS "coin",
		a.ticket AS "ticket",
		a.create_by AS "createBy.id",
		a.create_date AS "createDate",
		a.update_by AS "updateBy.id",
		a.update_date AS "updateDate",
		a.remarks AS "remarks",
		a.del_flag AS "delFlag",
		office.name AS "office.name",
		office.logo as "office.logo",
		config.coinName as "coinName"
	</sql>
	
	<sql id="userWalletJoins">
		LEFT JOIN sys_office office ON office.id = a.office_id
		left join office_coin_config config on config.office_id = office.id
	</sql>
	
    
	<select id="get" resultType="UserWallet" >
		SELECT 
			<include refid="userWalletColumns"/>
		FROM user_wallet a
		<include refid="userWalletJoins"/>
		WHERE a.id = #{id}
	</select>
	
	<select id="findList" resultType="UserWallet" >
		SELECT 
			<include refid="userWalletColumns"/>
		FROM user_wallet a
		<include refid="userWalletJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			<if test="office != null and office.id != null and office.id != ''">
				AND a.office_id = #{office.id}
			</if>
			<if test="createBy != null and createBy.id != null and createBy.id != ''">
				AND a.create_by = #{createBy.id}
			</if>
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<select id="findAllList" resultType="UserWallet" >
		SELECT 
			<include refid="userWalletColumns"/>
		FROM user_wallet a
		<include refid="userWalletJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
		</where>		
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<insert id="insert">
		INSERT INTO user_wallet(
			id,
			office_id,
			coin,
			ticket,
			create_by,
			create_date,
			update_by,
			update_date,
			remarks,
			del_flag
		) VALUES (
			#{id},
			#{office.id},
			#{coin},
			#{ticket},
			#{createBy.id},
			#{createDate},
			#{updateBy.id},
			#{updateDate},
			#{remarks},
			#{delFlag}
		)
	</insert>
	
	<update id="update">
		UPDATE user_wallet SET 	
			office_id = #{office.id},
			coin = #{coin},
			ticket = #{ticket},
			update_by = #{updateBy.id},
			update_date = #{updateDate},
			remarks = #{remarks}
		WHERE id = #{id}
	</update>
	
	
	<!--物理删除-->
	<update id="delete">
		DELETE FROM user_wallet
		WHERE id = #{id}
	</update>
	
	<!--逻辑删除-->
	<update id="deleteByLogic">
		UPDATE user_wallet SET 
			del_flag = #{DEL_FLAG_DELETE}
		WHERE id = #{id}
	</update>
	
	<update id="addCoinAndTicket">
		UPDATE user_wallet SET 	
			coin = coin + #{addCoin},
			ticket = ticket + #{addTicket}
		WHERE id = #{id}
	</update>
	
	
	
	<!-- 根据实体名称和字段名称和字段值获取唯一记录 -->
	<select id="findUniqueByProperty" resultType="UserWallet" statementType="STATEMENT">
		select * FROM user_wallet  where ${propertyName} = '${value}'
	</select>
	
</mapper>