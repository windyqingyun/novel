<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jeeplus.modules.bus.dao.PaymentBillDao">
    
	<sql id="paymentBillColumns">
		a.id AS "id",
		a.user_id AS "user.id",
		a.price AS "price",
		a.pay_channel AS "payChannel",
		a.office_id AS "office.id",
		a.result_coin AS "resultCoin",
		a.result_ticket AS "resultTicket",
		a.pay_date AS "payDate",
		a.success_date AS "successDate",
		a.issuccess AS "issuccess",
		a.error_msg AS "errorMsg",
		a.create_date AS "createDate",
		a.update_date AS "updateDate",
		a.del_flag AS "delFlag",
		user.name AS "user.name",
		office.name AS "office.name",
		a.order_code as "orderCode"
	</sql>
	
	<sql id="paymentBillJoins">
		LEFT JOIN sys_user user ON user.id = a.user_id
		LEFT JOIN sys_office office ON office.id = a.office_id
	</sql>
	
    
	<select id="get" resultType="PaymentBill" >
		SELECT 
			<include refid="paymentBillColumns"/>
		FROM payment_bill a
		<include refid="paymentBillJoins"/>
		WHERE a.id = #{id}
	</select>
	
	<select id="getFirstPaymentBillIfNoSuc" resultType="PaymentBill" >
		SELECT 
				<include refid="paymentBillColumns"/>
			FROM payment_bill a
			<include refid="paymentBillJoins"/>
			<where>
				a.user_id = #{userId}
				and issuccess = '0' and 
					not EXISTS (select id from payment_bill where user_id = #{userId} and issuccess = '1')
			</where> 
			order by a.create_date asc
			limit 0,1
	</select>
	
	<select id="findList" resultType="PaymentBill" >
		SELECT 
			<include refid="paymentBillColumns"/>
		FROM payment_bill a
		<include refid="paymentBillJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			<if test="user != null and user.id != null and user.id != ''">
				AND a.user_id = #{user.id}
			</if>
			<if test="payChannel != null and payChannel != ''">
				AND a.pay_channel = #{payChannel}
			</if>
			<if test="office != null and office.id != null and office.id != ''">
				AND a.office_id = #{office.id}
			</if>
			<if test="orderCode != null and orderCode != ''">
				AND a.order_code = #{orderCode}
			</if>
			<if test="beginPayDate != null">
				<![CDATA[ AND a.pay_date >= #{beginPayDate} ]]>
			</if>
			<if test="endPayDate != null">
				<![CDATA[ AND a.pay_date < DATE_ADD(#{endPayDate},INTERVAL 1 DAY)  ]]>
			</if>
			<if test="issuccess != null and issuccess != ''">
				AND a.issuccess = #{issuccess}
			</if>
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<select id="findAllList" resultType="PaymentBill" >
		SELECT 
			<include refid="paymentBillColumns"/>
		FROM payment_bill a
		<include refid="paymentBillJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
		</where>		
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<insert id="insert">
		INSERT INTO payment_bill(
			id,
			user_id,
			order_code,
			price,
			pay_channel,
			pay_origin,
			office_id,
			result_coin,
			result_ticket,
			pay_date,
			success_date,
			issuccess,
			error_msg,
			create_date,
			update_date,
			del_flag,
			book_id
		) VALUES (
			#{id},
			#{user.id},
			#{orderCode},
			#{price},
			#{payChannel},
			#{payOrigin},
			#{office.id},
			#{resultCoin},
			#{resultTicket},
			#{payDate},
			#{successDate},
			#{issuccess},
			#{errorMsg},
			#{createDate},
			#{updateDate},
			#{delFlag},
			#{bookId}
		)
	</insert>
	
	<update id="update">
		UPDATE payment_bill SET 	
			user_id = #{user.id},
			order_code = #{orderCode},
			price = #{price},
			pay_channel = #{payChannel},
			office_id = #{office.id},
			result_coin = #{resultCoin},
			result_ticket = #{resultTicket},
			pay_date = #{payDate},
			success_date = #{successDate},
			issuccess = #{issuccess},
			error_msg = #{errorMsg},
			update_date = #{updateDate}
		WHERE id = #{id}
	</update>
	
	
	<!--物理删除-->
	<update id="delete">
		DELETE FROM payment_bill
		WHERE id = #{id}
	</update>
	
	<!--逻辑删除-->
	<update id="deleteByLogic">
		UPDATE payment_bill SET 
			del_flag = #{DEL_FLAG_DELETE}
		WHERE id = #{id}
	</update>
	
	
	<!-- 根据实体名称和字段名称和字段值获取唯一记录 -->
	<select id="findUniqueByProperty" resultType="PaymentBill" statementType="STATEMENT">
		select * FROM payment_bill  where ${propertyName} = '${value}'
	</select>
	
</mapper>